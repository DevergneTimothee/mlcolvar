name: CI

on:
  # GitHub has started calling new repo's first branch "main" https://github.com/github/renaming
  # The cookiecutter uses the "--initial-branch" flag when it runs git-init
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"
  schedule:
    # Weekly tests run on main by default:
    #   Scheduled workflows run on the latest commit on the default or base branch.
    #   (from https://help.github.com/en/actions/reference/events-that-trigger-workflows#scheduled-events-schedule)
    - cron: "0 0 * * 0"

jobs:
  test:
    name: Test on ${{ matrix.os }}, Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # os: [macOS-latest, ubuntu-latest, windows-latest]      # TODO use this when macOS-latest becomes stable again
        os: [macOS-13, ubuntu-latest, windows-latest]
        python-version: [3.8, 3.9, "3.10"]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Checkout latest tag
        shell: bash
        run: |
          TAG=`git describe --tags $(git rev-list --tags --max-count=1)`
          git checkout tags/$TAG

      - name: Additional info about the build
        shell: bash
        run: |
          uname -a
          df -h
          ulimit -a

      - name: Install package from PyPI
        # conda setup requires this special shell
        shell: bash -l {0}
        run: |
          python -m pip install mlcolvar
          micromamba list

      - name: Run tests
        # conda setup requires this special shell
        shell: bash -l {0}
        run: |
          pytest -v --cov=mlcolvar --cov-report=xml --color=yes mlcolvar/tests/

      - name: Run notebook tests
        # conda setup requires this special shell
        shell: bash -l {0}
        if: contains( matrix.os, 'ubuntu' )
        run: |
          pytest -v --nbmake docs/notebooks/ --ignore=docs/notebooks/tutorials/data/ --cov=mlcolvar --cov-append --cov-report=xml --color=yes 

      - name: CodeCov
        if: contains( matrix.os, 'ubuntu' )
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: codecov
          name: codecov-${{ matrix.os }}-py${{ matrix.python-version }}
